name: Build Main

on:
  push:
    branches: [ main ]

jobs:
  build-main:
    name: Build and push main snapshot images
    #strategy: 
    #  matrix:
    #    architecture: [amd64,ppc64le,arm64,s390x]
    #    platform: [linux]
    runs-on: ubuntu-latest
    env:
      IMAGE_REGISTRY: quay.io/opdev
    steps:
    - uses: actions/checkout@v2
    - name: Fetch latest release version
      uses: reloc8/action-latest-release-version@1.0.0
      id: fetch-latest-release
    - name: Set Env Tags
      run: echo RELEASE_TAG=${{ steps.fetch-latest-release.outputs.latest-release }} >> $GITHUB_ENV
    - name: set short sha
      run: echo SHA_SHORT=$(git rev-parse --short HEAD) >> $GITHUB_ENV
    
    - name: Install qemu dependency
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static
        
    - name: Build Image1
      id: build-image1
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_REGISTRY }}/preflight
        tags: ${{ env.SHA_SHORT }}-linux-amd64
        archs: amd64
        build-args: |
          quay_expiration=1w
          release_tag=${{ env.RELEASE_TAG }}-alpha+${{ github.sha }}
          ARCH=amd64
        dockerfiles: |
          ./Dockerfile

    - name: Build Image2
      id: build-image2
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_REGISTRY }}/preflight
        tags: ${{ env.SHA_SHORT }}-linux-ppc64le
        archs: ppc64le
        build-args: |
          quay_expiration=1w
          release_tag=${{ env.RELEASE_TAG }}-alpha+${{ github.sha }}
          ARCH=ppc64le
        dockerfiles: |
          ./Dockerfile
 
    - name: Build Image3
      id: build-image3
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_REGISTRY }}/preflight
        tags: ${{ env.SHA_SHORT }}-linux-arm64
        archs: arm64
        build-args: |
          quay_expiration=1w
          release_tag=${{ env.RELEASE_TAG }}-alpha+${{ github.sha }}
          ARCH=arm64
        dockerfiles: |
          ./Dockerfile
          
    - name: Build Image4
      id: build-image4
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_REGISTRY }}/preflight
        tags: ${{ env.SHA_SHORT }}-linux-s390x
        archs: s390x
        build-args: |
          quay_expiration=1w
          release_tag=${{ env.RELEASE_TAG }}-alpha+${{ github.sha }}
          ARCH=s390x
        dockerfiles: |
          ./Dockerfile
      
    - name: Push Image1
      id: push-image1
      uses: redhat-actions/push-to-registry@v2
      with:
        image: preflight
        tags: ${{ env.SHA_SHORT }}-linux-amd64
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Push Image2
      id: push-image2
      uses: redhat-actions/push-to-registry@v2
      with:
        image: preflight
        tags: ${{ env.SHA_SHORT }}-linux-ppc64le
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Push Image3
      id: push-image3
      uses: redhat-actions/push-to-registry@v2
      with:
        image: preflight
        tags: ${{ env.SHA_SHORT }}-linux-arm64
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Push Image4
      id: push-image4
      uses: redhat-actions/push-to-registry@v2
      with:
        image: preflight
        tags: ${{ env.SHA_SHORT }}-linux-s390x
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
   # - name: Print image url
   #   run: echo "Image pushed to ${{ steps.push-image.outputs.registry-paths }}"
